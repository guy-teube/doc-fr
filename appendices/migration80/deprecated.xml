<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<sect1 xml:id="migration80.deprecated">
 <title>Fonctionnalités dépréciées</title>

 <sect2 xml:id="migration80.deprecated.core">
  <title>PHP Core</title>

  <itemizedlist>
   <listitem>
    <para>
     Si un paramètre avec une valeur par défaut est suivi d'un paramètre obligatoire, la valeur par défaut n'aura pas d'effet.Ce comportement a été déprécié à partir de PHP 8.0.0 et peut être corrigé en supprimant la valeur par défaut, sans changer la fonctionnalité :
    </para>
    <para>
     <programlisting role="php">
<![CDATA[
<?php
function test($a = [], $b) {} // Avant
function test($a, $b) {}      // Après
?>
]]>
     </programlisting>
    </para>
    <para>
     Il y a une exception à cette règle, avec <code>Type $param = null</code>, où la valeur null rend le type implicitement nullable. Cet usage est autorisé, mais il est recommandé d'utiliser un nullable explicite :
    </para>
    <para>
     <programlisting role="php">
<![CDATA[
<?php
function test(A $a = null, $b) {} // Toujours autorisé
function test(?A $a, $b) {}       // Recommandé
?>
]]>
     </programlisting>
    </para>
   </listitem>
   <listitem>
    <para>
     Appeler <function>get_defined_functions</function> avec <parameter>exclude_disabled</parameter>
     défini explicitement à &false; est déprécié et n'a plus d'effet.
     <function>get_defined_functions</function> n'inclura jamais de fonction désactivées.
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.deprecated.enchant">
  <title>Enchant</title>

  <itemizedlist>
   <listitem>
    <para>
     <function>enchant_broker_set_dict_path</function> et
     <function>enchant_broker_get_dict_path</function>
     sont dépréciés, cet cette fonctionnalité n'est plus disponible dans libenchant &lt; 1.5 et
     libenchant-2.
    </para>
   </listitem>
   <listitem>
    <para>
     <function>enchant_dict_add_to_personal</function> est déprécié ; utilisez
     <function>enchant_dict_add</function> à la place.
    </para>
   </listitem>
   <listitem>
    <para>
     <function>enchant_dict_is_in_session</function> est déprécié ; utilisez
     <function>enchant_dict_is_added</function> à la place.
    </para>
   </listitem>
   <listitem>
    <para>
     <function>enchant_broker_free</function> et <function>enchant_broker_free_dict</function> sont
     dépréciés ; à la place faites un unset sur l'objet.
    </para>
   </listitem>
   <listitem>
    <para>
     Les constantes <constant>ENCHANT_MYSPELL</constant> et <constant>ENCHANT_ISPELL</constant> sont dépréciés.
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.deprecated.libxml">
  <title>LibXML</title>

  <para>
   <function>libxml_disable_entity_loader</function> est déprécié. Comme libxml 2.9.0 est désormais requise, le chargement de l'entité externe est toujours désactivé par défaut, et cette fonction n'est plus nécessaire pour se protéger contre des attaques XXE, sauf si la constante <constant>LIBXML_NOENT</constant> (toujours sujette à vulnérabilité) est utilisée.
   Dans ce cas, il est recommandé de modifier le code avec
   <function>libxml_set_external_entity_loader</function> pour supprimer le chargement des entités externes.
  </para>
 </sect2>

 <sect2 xml:id="migration80.deprecated.pgsql">
  <title>PGSQL / PDO PGSQL</title>

  <itemizedlist>
   <listitem>
    <para>
     La constante <constant>PGSQL_LIBPQ_VERSION_STR</constant> a désormais la même valeur que
     <constant>PGSQL_LIBPQ_VERSION</constant>, et est donc déprécié.
    </para>
   </listitem>
   <listitem>
    <para>
     Les alias de fonctions de l'extension pgsql extension ont été dépréciés.
     Voici la liste des fonctions qu'il faut désormais utiliser :
    </para>
    <para>
     <simplelist>
      <member><function>pg_errormessage</function> → <function>pg_last_error</function></member>
      <member><function>pg_numrows</function> → <function>pg_num_rows</function></member>
      <member><function>pg_numfields</function> → <function>pg_num_fields</function></member>
      <member><function>pg_cmdtuples</function> → <function>pg_affected_rows</function></member>
      <member><function>pg_fieldname</function> → <function>pg_field_name</function></member>
      <member><function>pg_fieldsize</function> → <function>pg_field_size</function></member>
      <member><function>pg_fieldtype</function> → <function>pg_field_type</function></member>
      <member><function>pg_fieldnum</function> → <function>pg_field_num</function></member>
      <member><function>pg_result</function> → <function>pg_fetch_result</function></member>
      <member><function>pg_fieldprtlen</function> → <function>pg_field_prtlen</function></member>
      <member><function>pg_fieldisnull</function> → <function>pg_field_is_null</function></member>
      <member><function>pg_freeresult</function> → <function>pg_free_result</function></member>
      <member><function>pg_getlastoid</function> → <function>pg_last_oid</function></member>
      <member><function>pg_locreate</function> → <function>pg_lo_create</function></member>
      <member><function>pg_lounlink</function> → <function>pg_lo_unlink</function></member>
      <member><function>pg_loopen</function> → <function>pg_lo_open</function></member>
      <member><function>pg_loclose</function> → <function>pg_lo_close</function></member>
      <member><function>pg_loread</function> → <function>pg_lo_read</function></member>
      <member><function>pg_lowrite</function> → <function>pg_lo_write</function></member>
      <member><function>pg_loreadall</function> → <function>pg_lo_read_all</function></member>
      <member><function>pg_loimport</function> → <function>pg_lo_import</function></member>
      <member><function>pg_loexport</function> → <function>pg_lo_export</function></member>
      <member><function>pg_setclientencoding</function> → <function>pg_set_client_encoding</function></member>
      <member><function>pg_clientencoding</function> -> <function>pg_client_encoding</function></member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.deprecated.standard">
  <title>Bibliothèque Standard</title>

  <itemizedlist>
   <listitem>
    <para>
     Les fonctions de comparaison par tri qui retournent &true; ou &false; retournent désormais une alerte de dépréciation, et doivent être remplacées avec une implémentation qui retourne un entier inférieur, égal, ou supérieur à zéro.
    </para>
    <para>
     <programlisting role="php">
<![CDATA[
<?php
// Remplacez
usort($array, fn($a, $b) => $a > $b);
// par
usort($array, fn($a, $b) => $a <=> $b);
?>
]]>
     </programlisting>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.deprecated.zip">
  <title>Zip</title>

  <itemizedlist>
   <listitem>
    <para>
     Utiliser un fichier vide dans ZipArchive est déprécié. Les fichiers vides ne sont plus considérés comme valides par Libzip 1.6.0. La solution de contournement sera supprimée dans la prochaine version.
    </para>
   </listitem>
   <listitem>
    <para>
     L'API procédurale de Zip est dépréciée. À la place utilisez <classname>ZipArchive</classname>.
     L'itération sur toutes les entrées peut être réalisée avec <methodname>ZipArchive::statIndex</methodname>
     et une boucle <link linkend="control-structures.for">for</link> :
    </para>
    <para>
     <programlisting role="php">
<![CDATA[
<?php
// itération avec l'API procédurale
assert(is_resource($zip));
while ($entry = zip_read($zip)) {
    echo zip_entry_name($entry);
}

// itérate avec l'API orientée objet
assert($zip instanceof ZipArchive);
for ($i = 0; $entry = $zip->statIndex($i); $i++) {
    echo $entry['name'];
}
?>
]]>
     </programlisting>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.deprecated.reflection">
  <title>Reflection</title>

  <itemizedlist>
   <listitem>
    <para>
     <methodname>ReflectionFunction::isDisabled</methodname> est dépréciée, il n'est plus possible de créer une classe  <classname>ReflectionFunction</classname> pour une fonction désactivée. Cette méthode retourne désormais &false;.
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>ReflectionParameter::getClass</methodname>,
     <methodname>ReflectionParameter::isArray</methodname>, et
     <methodname>ReflectionParameter::isCallable</methodname> sont dépréciés.
     <methodname>ReflectionParameter::getType</methodname> et l'API
     <classname>ReflectionType</classname> doivent être utilisés en remplacement.
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
